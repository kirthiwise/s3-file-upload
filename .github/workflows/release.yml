name : ReleaseCI
on: 
  push:
    branches: ["main"]
    paths: ["dce/**"]
jobs:
  detect-file-changes:
    runs-on: ubuntu-20.04
    # Set job outputs to values from filter step
    outputs:
      dce: ${{ steps.filter.outputs.dce }}
    steps:
      - name: Checkout Backend code
        uses: actions/checkout@v1
      # For pull requests it's not necessary to checkout the code
      - name: Apply filters to check file(s) cahnges
        uses: actions/checkout@v1
        id: filter
        with:
          filters: |
            dce:
              - 'dce/**'
  dce:
    needs: [detect-file-changes]
    if: |
      always() &&
      needs.detect-file-changes.outputs.datalake == 'true' &&
      github.event.pull_request.merged == true &&
      ((needs.deploy-frontend.result == 'success' || needs.deploy-frontend.result == 'skipped') ||
      (needs.deploy-backend.result == 'success' || needs.deploy-backend.result == 'skipped'))
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: Release to S3
        env:
          AWS_S3_BUCKET: ${{secrets.AWS_Bucket_Name}}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_Access_Key}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_Access_Secret}}
        run: |
          
          sudo apt-get install awscli
        
          zip -r dce.zip dce/
          aws s3 cp dce.zip s3:://${{secrets.AWS_Bucket_Name}}
          aws s3 sync dce/scripts/ s3://${{secrets.AWS_Bucket_Name}}/scripts/
          ls
          aws s3 cp infrastructure/dce/dependent_files/dce_lambda_function.zip s3://${{secrets.AWS_Bucket_Name}}/scripts/